<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AgCA/9k=
</value>
  </data>
</root>